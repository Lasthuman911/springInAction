<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd ">
    <!--case 1：基本裝配-->

    <!--    &lt;!&ndash;若無具體ID，則默認為springinaction.soundsystem.SgtPeppers#0，下一個SgtPeppers為#1 &ndash;&gt;
        <bean class="springinaction.soundsystem.SgtPeppers">-->

    <!-- 基於xml配置，若類名改變，則相關的配置文件也需要手動更新，基於java Config則不需要，便於重構
     用javaConfig創建bean更加靈活，添加條件等等-->

    <bean id="compactDisc" class="springinaction.soundsystem.SgtPeppers"></bean>

    <!--case 5：在xml中加载javaConfig 配置信息-->
    <!--<bean class="springinaction.soundsystem.CDConfig"/>-->

    <!--case 2 ：構造函數引用裝配-->

    <!-- 若有多個參數，重複constructor-arg ref=-->
    <!--    <bean id="cdPlayer" class="springinaction.soundsystem.auto.CDPlayer">
            <constructor-arg ref="compactDisc"/>
        </bean>-->

    <!--替代方案 1 cd:構造的參數名-->
    <!--   <bean id="cdPlayer" class="springinaction.soundsystem.auto.CDPlayer"
       c:cd-ref="compactDisc"/> -->

    <!--替代方案 2    _0 ：參數的位置-->
    <bean id="cdPlayer" class="springinaction.soundsystem.auto.CDPlayer"
          c:_0-ref="compactDisc"/>
    <!--   <property name="cd" ref="compactDisc"></property>
   </bean>-->
    <!--c:_0-ref="compactDisc"/>-->

    <!-- case 3 :構造函數裝配字面值--><!---->
    <!-- _c 暫時無法進行集合的裝配-->
    <!--    <bean id="compactDisc" class="springinaction.soundsystem.BlankDisk">
            <constructor-arg value="hhhhhhhhhh"/>
            <constructor-arg value="wzm"/>
            &lt;!&ndash;<constructor-arg><null/></constructor-arg>&ndash;&gt;
            <constructor-arg>
                <list>&lt;!&ndash;若是set 直接修改為set &ndash;&gt;
                    <value>1</value>&lt;!&ndash;若是引用則直接用 ref bean=“” &ndash;&gt;
                    <value>2</value>
                    <value>3</value>
                </list>
            </constructor-arg>
        </bean>-->

    <!--    <bean id="compactDisc" class="springinaction.soundsystem.BlankDisk"
        c:_0="hhhhhhhhhh"
        c:_1="wzm"/>-->

    <!--    <bean id="compactDisc" class="springinaction.soundsystem.BlankDisk"
              c:artist="hhhhhhhhhh"
              c:title="wzm"/>-->

    <!-- case 4 :通过setter getter装配-->
   <!-- <bean id="reallycompactDisc" class="springinaction.soundsystem.BlankDisk">
        <property name="artist" value="lilili"/>
        <property name="title" value="wzm"/>
        <property name="tracks">
            <list>
                <value>1</value>
                <value>2</value>
                <value>3</value>
                <value>4</value>
            </list>
        </property>
    </bean>

    &lt;!&ndash; case 5：通过p命名空间完成case 4 功能,不能使用P来装配集合&ndash;&gt;
    <bean id="reallycompactDisc2" class="springinaction.soundsystem.BlankDisk"
          p:title="lilili"
          p:artist="wzm">
        <property name="tracks">
            <list>
                <value>1</value>
                <value>2</value>
                <value>3</value>
                <value>4</value>
            </list>
        </property>
    </bean>

    &lt;!&ndash;case 6 :使用util 装配集合,util list可以独立存在&ndash;&gt;
    <bean id="reallycompactDisc3" class="springinaction.soundsystem.BlankDisk"
          p:title="lilili"
          p:artist="wzm"
          p:tracks-ref="trackList">
    </bean>
    <util:list id="trackList">
        <value>1</value>
        <value>2</value>
        <value>3</value>
        <value>4</value>
    </util:list>-->

</beans>